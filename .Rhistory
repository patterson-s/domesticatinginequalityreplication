aes(label = after_stat(stratum))) +
theme_void() +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
alluvial_data %>%
ggplot(mapping = aes(axis1 = source, axis2 = target, y = value)) +
geom_flow(data = alluvial_data[ which(alluvial_data$source_domesticated == 0 & alluvial_data$change == 1),], mapping = aes(fill = domesticated)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
theme_void() +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
alluvial_data %>%
filter(source_domesticated == 0 & change == 1) %>%
ggplot(mapping = aes(axis1 = source, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
theme_void() +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
alluvial_data %>%
ggplot(mapping = aes(axis1 = source, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
theme_void() +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
alluvial_data %<>%
mutate(already_domesticated = case_when(
source == "Soft Domesticators" | source == "Hard Domesticators" | source == "Liberals" ~ "Domesticated",
source == "Conservative Challengers" ~ "Conservative Challengers" ,
source == "Hard Challengers" ~ "Hard Challengers",
source == "Soft Challengers" ~ "Soft Challengers"
))
alluvial_data$already_domesticated <- factor(alluvial_data$already_domesticated, levels = c("Conservative Challengers", "Hard Challengers", "Soft Challengers", "Domesticated"))
alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
theme_void() +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3
a3a <- alluvial_data %>%
filter(source_domesticated == 0 & change == 1) %>%
ggplot(mapping = aes(axis1 = source, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = source, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = source, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = change)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = source, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = as.factor(change))) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = source, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated, alpha = domesticated)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated, alpha = -domesticated)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated, alpha = domesticated)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated, alpha = change)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = change)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = as.factor(change))) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = as.factor(change), alpha = domesticated)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = as.factor(change))) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
alluvial_data %<>%
mutate(domesticated_alpha = case_when(
domesticated == "Not Domesticated" ~ 0.25,
domesticated == "Domesticated" ~ 0.75
))
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated, alpha = domesticated_alpha)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
alluvial_data %<>%
mutate(domesticated_alpha = case_when(
domesticated == "Not Domesticated" ~ 0.4,
domesticated == "Domesticated" ~ 0.6
))
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated, alpha = domesticated_alpha)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
alluvial_data %<>%
mutate(domesticated_alpha = case_when(
domesticated == "Not Domesticated" ~ 0.5,
domesticated == "Domesticated" ~ 0.55
))
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated, alpha = domesticated_alpha)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(color = "black", fill = domesticated, alpha = domesticated_alpha)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated, alpha = domesticated)) +
scale_alpha(range = c(0.4, 0.8)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a <- alluvial_data %>%
ggplot(mapping = aes(axis1 = already_domesticated, axis2 = target, y = value)) +
geom_flow(mapping = aes(fill = domesticated, alpha = domesticated)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
labs(title = "Flow from Non-Domesticated to Domesticated Clusters between 1976 and 1989")
a3a
a3a + scale_alpha(range = c(0.4, 0.8)) +
1
a3a + scale_alpha(range = c(0.4, 0.8))
a3a + scale_alpha_discrete(range = c(0.4, 0.8))
a3a <- a3a + scale_alpha_discrete(range = c(0.4, 0.8))
a3a
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse,tidytext, magrittr, zoo, viridis, patchwork, hrbrthemes, circlize, networkD3, ggalluvial)
set.seed(42)
# Load un_long ----
un_long <- read_csv("un_long.csv", col_types = cols(...1 = col_skip()))
un_cluster_year <- un_long %>%
group_by(iso,year,sourcetext) %>%
summarise(iso_year_source_mean = mean(value)) %>%
ungroup() %>%
group_by(iso, year) %>%
mutate(hc_over0 = case_when(
max(iso_year_source_mean) > 0 ~ 1,
max(iso_year_source_mean) <= 0 ~ 0
)) %>%
ungroup() %>%
group_by(iso, year) %>%
arrange(iso_year_source_mean,.by_group = TRUE) %>%
mutate(sourceorder_ascending = paste(sourcetext, collapse = ",")) %>%
ungroup() %>%
mutate(cluster = case_when(
sourceorder_ascending == "nieo,brandt1,reagan" ~ "Liberals",
sourceorder_ascending == "nieo,reagan,brandt1" ~  "Hard Domesticators",
sourceorder_ascending == "reagan,nieo,brandt1"~ "Soft Domesticators",
sourceorder_ascending == "reagan,brandt1,nieo" ~ "Soft Challengers",
sourceorder_ascending == "brandt1,reagan,nieo" ~ "Hard Challengers",
sourceorder_ascending == "brandt1,nieo,reagan"~ "Conservative Challengers")) %>%
ungroup()
hardchallengers <- un_cluster_year %>%
select(iso, year, cluster) %>%
distinct() %>%
filter(year == 1973 | year == 1991 | year == 2009) %>%
pivot_wider(names_from = year, values_from = cluster, names_prefix = "year_") %>%
drop_na() %>%
count(year_1973, year_1991, year_2009)
View(hardchallengers)
names(hardchallengers) <- c("source", "target1","target2", "value")
hardchallengers %>%
ggplot(mapping = aes(axis1 = source, axis2 = target1, axis3 = target2, y = value)) +
geom_flow(mapping = aes(fill = value)) +
geom_stratum(aes(alpha = 0.2)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum)))
hardchallengers %>%
filter(source == "Hard Challengers") %>%
ggplot(mapping = aes(axis1 = source, axis2 = target1, axis3 = target2, y = value)) +
geom_flow(mapping = aes(fill = value)) +
geom_stratum(aes(alpha = 0.2)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum)))
hardchallengers %>%
filter(source == "Hard Challengers") %>%
ggplot(mapping = aes(axis1 = source, axis2 = target1, y = value)) +
geom_flow(mapping = aes(fill = value)) +
geom_stratum(aes(alpha = 0.2)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum)))
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse,tidytext, magrittr, zoo)
set.seed(42)
# Load un_long ----
un_long <- read_csv("un_long.csv", col_types = cols(...1 = col_skip()))
# Compute cluster membership at 3,5,7 year rolling means ----
un_roll357 <- un_long %>%
group_by(iso, year, sourcetext) %>%
mutate(iso_year_source_mean = mean(value)) %>%
select(iso,year, sourcetext, iso_year_source_mean) %>%
unique() %>%
group_by(iso, sourcetext) %>%
mutate(roll3 = rollmean(iso_year_source_mean, k = 3, fill = NA)) %>%
mutate(roll5 = rollmean(iso_year_source_mean, k = 5, fill = NA)) %>%
mutate(roll7 = rollmean(iso_year_source_mean, k = 7, fill = NA))
# 3 year ----
figure3a_data <- un_roll357 %>%
select(-roll5,-roll7) %>%
drop_na() %>%
group_by(iso,year) %>%
arrange(roll3,.by_group = TRUE) %>%
mutate(sourceorder_ascending = paste(sourcetext, collapse = ",")) %>%
ungroup() %>%
select(iso,year,sourceorder_ascending) %>%
unique() %>%
mutate(cluster = case_when(
sourceorder_ascending == "nieo,brandt1,reagan" ~ "Liberals",
sourceorder_ascending == "nieo,reagan,brandt1" ~  "Hard Domesticators",
sourceorder_ascending == "reagan,nieo,brandt1"~ "Soft Domesticators",
sourceorder_ascending == "reagan,brandt1,nieo" ~ "Soft Challengers",
sourceorder_ascending == "brandt1,reagan,nieo" ~ "Hard Challengers",
sourceorder_ascending == "brandt1,nieo,reagan"~ "Conservative Challengers")) %>%
ungroup() %>%
select(iso,year,cluster) %>%
group_by(year) %>%
count(cluster) %>%
mutate(n_total = sum(n)) %>%
mutate(cluster_proportion = n/n_total)
# Add factor levels to clusters
figure3a_data$cluster <- factor(figure3a_data$cluster, levels = c("Liberals", "Hard Domesticators", "Soft Domesticators", "Soft Challengers", "Hard Challengers", "Conservative Challengers"))
# Generate figure
figure3a_plot <- figure3a_data %>%
ggplot(mapping = aes(x = year, y = cluster_proportion, fill = cluster)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "RdYlBu") +
labs(title = "Proportion of Cluster Membership by Interval", subtitle = "Membership Assigned with 3-year Rolling Averages") +
xlab("Year") +
ylab("Proportion of Cluster Membership")
# 5 year ----
figure3b_data <- un_roll357 %>%
select(-roll3,-roll7) %>%
drop_na() %>%
group_by(iso,year) %>%
arrange(roll5,.by_group = TRUE) %>%
mutate(sourceorder_ascending = paste(sourcetext, collapse = ",")) %>%
ungroup() %>%
select(iso,year,sourceorder_ascending) %>%
unique() %>%
mutate(cluster = case_when(
sourceorder_ascending == "nieo,brandt1,reagan" ~ "Liberals",
sourceorder_ascending == "nieo,reagan,brandt1" ~  "Hard Domesticators",
sourceorder_ascending == "reagan,nieo,brandt1"~ "Soft Domesticators",
sourceorder_ascending == "reagan,brandt1,nieo" ~ "Soft Challengers",
sourceorder_ascending == "brandt1,reagan,nieo" ~ "Hard Challengers",
sourceorder_ascending == "brandt1,nieo,reagan"~ "Conservative Challengers")) %>%
ungroup() %>%
select(iso,year,cluster) %>%
group_by(year) %>%
count(cluster) %>%
mutate(n_total = sum(n)) %>%
mutate(cluster_proportion = n/n_total)
# Add factor levels to clusters
figure3b_data$cluster <- factor(figure3b_data$cluster, levels = c("Liberals", "Hard Domesticators", "Soft Domesticators", "Soft Challengers", "Hard Challengers", "Conservative Challengers"))
# Generate figure
figure3b_plot <- figure3b_data %>%
ggplot(mapping = aes(x = year, y = cluster_proportion, fill = cluster)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "RdYlBu") +
labs(title = "Proportion of Cluster Membership by Interval", subtitle = "Membership Assigned with 5-year Rolling Averages") +
xlab("Year") +
ylab("Proportion of Cluster Membership")
# 7 year ----
figure3c_data <- un_roll357 %>%
select(-roll3,-roll5) %>%
drop_na() %>%
group_by(iso,year) %>%
arrange(roll7,.by_group = TRUE) %>%
mutate(sourceorder_ascending = paste(sourcetext, collapse = ",")) %>%
ungroup() %>%
select(iso,year,sourceorder_ascending) %>%
unique() %>%
mutate(cluster = case_when(
sourceorder_ascending == "nieo,brandt1,reagan" ~ "Liberals",
sourceorder_ascending == "nieo,reagan,brandt1" ~  "Hard Domesticators",
sourceorder_ascending == "reagan,nieo,brandt1"~ "Soft Domesticators",
sourceorder_ascending == "reagan,brandt1,nieo" ~ "Soft Challengers",
sourceorder_ascending == "brandt1,reagan,nieo" ~ "Hard Challengers",
sourceorder_ascending == "brandt1,nieo,reagan"~ "Conservative Challengers")) %>%
ungroup() %>%
select(iso,year,cluster) %>%
group_by(year) %>%
count(cluster) %>%
mutate(n_total = sum(n)) %>%
mutate(cluster_proportion = n/n_total)
# Add factor levels to clusters
figure3c_data$cluster <- factor(figure3c_data$cluster, levels = c("Liberals", "Hard Domesticators", "Soft Domesticators", "Soft Challengers", "Hard Challengers", "Conservative Challengers"))
# Generate figure
figure3c_plot <- figure3c_data %>%
ggplot(mapping = aes(x = year, y = cluster_proportion, fill = cluster)) +
geom_bar(stat = "identity") +
scale_fill_brewer(palette = "RdYlBu") +
labs(title = "Proportion of Cluster Membership by Interval", subtitle = "Membership Assigned with 7-year Rolling Averages") +
xlab("Year") +
ylab("Proportion of Cluster Membership")
pacman::p_load(tidyverse,tidytext, magrittr, zoo, ggalluvial)
set.seed(42)
figure3a_data %>%
ggplot(mapping = aes(x = year, alluvium = cluster, y = cluster_proportion, fill = cluster)) +
geom_flow(aes(fill = cluster, colour = cluster)) +
scale_fill_brewer(palette = "RdYlBu") +
labs(title = "Proportion of Cluster Membership by Interval", subtitle = "Membership Assigned with 7-year Rolling Averages") +
xlab("Year") +
ylab("Proportion of Cluster Membership")
figure3a_data %>%
ggplot(mapping = aes(x = year, alluvium = cluster, y = cluster_proportion, fill = cluster)) +
geom_flow(aes(fill = cluster)) +
scale_fill_brewer(palette = "RdYlBu") +
labs(title = "Proportion of Cluster Membership by Interval", subtitle = "Membership Assigned with 7-year Rolling Averages") +
xlab("Year") +
ylab("Proportion of Cluster Membership")
?labs
?geom_flow
figure3a_data %>%
ggplot(mapping = aes(x = year, alluvium = cluster, y = cluster_proportion, fill = cluster)) +
geom_flow(aes(fill = cluster)) +
scale_fill_brewer(palette = "RdYlBu") +
labs(title = "Proportion of Cluster Membership by Interval", subtitle = "Membership Assigned with 3-year Rolling Averages") +
xlab("Year") +
ylab("Proportion of Cluster Membership")
figure3a_data %>%
ggplot(mapping = aes(x = year, alluvium = cluster, y = cluster_proportion, fill = cluster)) +
geom_flow(aes(fill = cluster)) +
scale_fill_brewer(palette = "RdYlBu") +
labs(title = "Proportion of Cluster Membership by Interval", subtitle = "Membership Assigned with 3-year Rolling Averages") +
xlab("Year") +
ylab("Proportion of Cluster Membership")
figure3a_data %>%
ggplot(mapping = aes(x = year, alluvium = cluster, y = cluster_proportion, fill = cluster)) +
geom_flow(aes(fill = cluster)) +
scale_fill_brewer(palette = "RdYlBu") +
labs(title = "Proportion of Cluster Membership by Interval", subtitle = "Membership Assigned with 3-year Rolling Averages") +
xlab("Year") +
ylab("Proportion of Cluster Membership") +
theme_minimal()
figure3a_data %>%
ggplot(mapping = aes(x = year, alluvium = cluster, y = cluster_proportion, fill = cluster)) +
geom_flow(aes(fill = cluster, alpha = 1)) +
scale_fill_brewer(palette = "RdYlBu") +
labs(title = "Proportion of Cluster Membership by Interval", subtitle = "Membership Assigned with 3-year Rolling Averages") +
xlab("Year") +
ylab("Proportion of Cluster Membership") +
theme_minimal()
figure3a_data %>%
ggplot(mapping = aes(x = year, alluvium = cluster, y = cluster_proportion, fill = cluster)) +
geom_flow(aes(fill = cluster, alpha = 1)) +
labs(title = "Proportion of Cluster Membership by Interval", subtitle = "Membership Assigned with 3-year Rolling Averages") +
xlab("Year") +
ylab("Proportion of Cluster Membership") +
theme_minimal()
figure3a_data %>%
ggplot(mapping = aes(x = year, alluvium = cluster, y = cluster_proportion, fill = cluster)) +
geom_flow(aes(fill = cluster)) +
scale_fill_brewer(palette = "RdYlBu") +
labs(title = "Proportion of Cluster Membership by Interval", subtitle = "Membership Assigned with 3-year Rolling Averages") +
xlab("Year") +
ylab("Proportion of Cluster Membership") +
theme_minimal()
figure3a_data %>%
ggplot(mapping = aes(x = year, alluvium = cluster, y = cluster_proportion, fill = cluster)) +
geom_alluvium(aes(fill = cluster)) +
scale_fill_brewer(palette = "RdYlBu") +
labs(title = "Proportion of Cluster Membership by Interval", subtitle = "Membership Assigned with 3-year Rolling Averages") +
xlab("Year") +
ylab("Proportion of Cluster Membership") +
theme_minimal()
figure3_alluvium <- figure3a_data %>%
ggplot(mapping = aes(x = year, alluvium = cluster, y = cluster_proportion, fill = cluster)) +
geom_alluvium(aes(fill = cluster)) +
scale_fill_brewer(palette = "RdYlBu") +
labs(title = "Proportion of Cluster Membership by Interval", subtitle = "Membership Assigned with 3-year Rolling Averages") +
xlab("Year") +
ylab("Proportion of Cluster Membership") +
theme_minimal()
pacman::p_load(tidyverse,tidytext, magrittr, zoo, viridis, patchwork, hrbrthemes, circlize, networkD3, ggalluvial, ggsankey)
install.packages("ggsankey")
rm(list = ls())
install.packages(c("antiword", "aplot", "bayestestR", "BBmisc", "bigmemory", "bigstatsr", "BiocManager", "blob", "bookdown", "brew", "broom", "car", "carData", "caret", "checkmate", "chron", "classInt", "cli", "clipr", "colorspace", "commonmark", "compositions", "conflicted", "conquer", "corrplot", "countrycode", "crayon", "credentials", "datawizard", "DBI", "dbplyr", "dendextend", "DEoptimR", "desc", "DescTools", "deSolve", "devtools", "dials", "digest", "discrim", "doParallel", "doSNOW", "dplyr", "DT", "dtplyr", "e1071", "effectsize", "ellipse", "emmeans", "evaluate", "extrafont", "fansi", "ff", "float", "FNN", "foreach", "fs", "furrr", "future", "future.apply", "gert", "ggeffects", "ggfortify", "ggfun", "gghighlight", "ggplot2", "ggVennDiagram", "git2r", "glmnet", "globals", "glue", "gmp", "googleVis", "googleway", "gower", "gplots", "graphlayouts", "gtools", "h2o", "hardhat", "haven", "Hmisc", "htmlTable", "httpuv", "httr", "igraph", "infer", "insight", "ipred", "ISOcodes", "iterators", "jqr", "jsonlite", "kernlab", "knitr", "lares", "latex2exp", "lhs", "lme4", "lmom", "magrittr", "maptools", "matrixStats", "memoise", "minpack.lm", "mlapi", "mnormt", "network", "ngram", "nloptr", "OECD", "openssl", "openxlsx", "packrat", "pander", "parallelly", "parameters", "parsnip", "partykit", "pdftools", "performance", "permute", "pkgbuild", "plyr", "polynom", "prettymapr", "processx", "progressr", "proxy", "proxyC", "ps", "psych", "qdapRegex", "qpdf", "quanteda", "quantreg", "r2d3", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "readr", "readxl", "recipes", "remotes", "reshape", "reticulate", "rex", "rgdal", "rgeos", "RhpcBLASctl", "rio", "rJava", "rjson", "rlang", "rmarkdown", "rmio", "Rmpfr", "robustbase", "rosm", "roxygen2", "rpart.plot", "rprojroot", "rsample", "rsconnect", "rsparse", "RSpectra", "Rttf2pt1", "sandwich", "sass", "scales", "seriation", "sessioninfo", "sf", "shinyBS", "shinyjs", "sjlabelled", "sjPlot", "slam", "sna", "snow", "sp", "sparklyr", "stargazer", "statnet.common", "stopwords", "svglite", "systemfonts", "testthat", "text2vec", "textdata", "textrecipes", "themis", "tibble", "tidygraph", "tidymodels", "tidyselect", "tidytext", "tinytex", "tmvtnorm", "TSP", "tune", "tzdb", "units", "usethis", "uuid", "V8", "vctrs", "vegan", "venneuler", "vroom", "waldo", "WDI", "webshot", "withr", "wk", "workflows", "workflowsets", "xfun", "XML", "xml2", "yaml", "yardstick", "zoo"))
install.packages(c("antiword", "aplot", "bayestestR", "BBmisc", "bigmemory", "bigstatsr", "BiocManager", "blob", "bookdown", "brew", "broom", "car", "carData", "caret", "checkmate", "chron", "classInt", "cli", "clipr", "colorspace", "commonmark", "compositions", "conflicted", "conquer", "corrplot", "countrycode", "crayon", "credentials", "datawizard", "DBI", "dbplyr", "dendextend", "DEoptimR", "desc", "DescTools", "deSolve", "devtools", "dials", "digest", "discrim", "doParallel", "doSNOW", "dplyr", "DT", "dtplyr", "e1071", "effectsize", "ellipse", "emmeans", "evaluate", "extrafont", "fansi", "ff", "float", "FNN", "foreach", "fs", "furrr", "future", "future.apply", "gert", "ggeffects", "ggfortify", "ggfun", "gghighlight", "ggplot2", "ggVennDiagram", "git2r", "glmnet", "globals", "glue", "gmp", "googleVis", "googleway", "gower", "gplots", "graphlayouts", "gtools", "h2o", "hardhat", "haven", "Hmisc", "htmlTable", "httpuv", "httr", "igraph", "infer", "insight", "ipred", "ISOcodes", "iterators", "jqr", "jsonlite", "kernlab", "knitr", "lares", "latex2exp", "lhs", "lme4", "lmom", "magrittr", "maptools", "matrixStats", "memoise", "minpack.lm", "mlapi", "mnormt", "network", "ngram", "nloptr", "OECD", "openssl", "openxlsx", "packrat", "pander", "parallelly", "parameters", "parsnip", "partykit", "pdftools", "performance", "permute", "pkgbuild", "plyr", "polynom", "prettymapr", "processx", "progressr", "proxy", "proxyC", "ps", "psych", "qdapRegex", "qpdf", "quanteda", "quantreg", "r2d3", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppParallel", "RCurl", "readr", "readxl", "recipes", "remotes", "reshape", "reticulate", "rex", "rgdal", "rgeos", "RhpcBLASctl", "rio", "rJava", "rjson", "rlang", "rmarkdown", "rmio", "Rmpfr", "robustbase", "rosm", "roxygen2", "rpart.plot", "rprojroot", "rsample", "rsconnect", "rsparse", "RSpectra", "Rttf2pt1", "sandwich", "sass", "scales", "seriation", "sessioninfo", "sf", "shinyBS", "shinyjs", "sjlabelled", "sjPlot", "slam", "sna", "snow", "sp", "sparklyr", "stargazer", "statnet.common", "stopwords", "svglite", "systemfonts", "testthat", "text2vec", "textdata", "textrecipes", "themis", "tibble", "tidygraph", "tidymodels", "tidyselect", "tidytext", "tinytex", "tmvtnorm", "TSP", "tune", "tzdb", "units", "usethis", "uuid", "V8", "vctrs", "vegan", "venneuler", "vroom", "waldo", "WDI", "webshot", "withr", "wk", "workflows", "workflowsets", "xfun", "XML", "xml2", "yaml", "yardstick", "zoo"))
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse,tidytext, magrittr, zoo, viridis, patchwork, hrbrthemes, circlize, networkD3, ggalluvial, ggsankey)
set.seed(42)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse,tidytext, magrittr, zoo, viridis, patchwork, hrbrthemes, circlize, networkD3, ggalluvial, ggsankey)
set.seed(42)
# Load un_long ----
un_long <- read_csv("un_long.csv", col_types = cols(...1 = col_skip()))
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse,tidytext, magrittr, zoo, ggalluvial, ggsankey)
set.seed(42)
pacman::p_load(tidyverse,tidytext, magrittr, zoo, ggalluvial)
update.packages(checkBuilt = TRUE)
update.packages(checkBuilt = TRUE)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(tidyverse,tidytext, magrittr, zoo, ggalluvial)
set.seed(42)
# Load un_long ----
un_long <- read_csv("un_long.csv", col_types = cols(...1 = col_skip()))
rm(list = ls())
